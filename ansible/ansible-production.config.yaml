---
- name: Create Kubernetes production
  hosts: root
  connection: local
  become: true
  gather_facts: false
  vars:
    web_namespace: miniproject
    deployment_name: miniproject
    image: khanhtoan007/miniproject:v1
    jenkins_image_name: jenkins/jenkins:lts
    jenkins_namespace: jenkins
    jenkins_deployment_name: jenkins
    aws_token: PpmPDL84mKOwdwO1+/V9d5pep5E9k65CdthdfvZ2
  tasks:
    - name: Install required python libraries
      pip:
        name: kubernetes

    - name: apply kubeconfig
      shell:
        cmd: aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
        chdir: ~/

      # # Create nginx ingress
    - name: Create ingress namespace
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: ingress-nginx

    - name: Create admission service account
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/ServiceAccount.yaml

    - name: Create Validating webhook
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/validating-webhook.yaml

    - name: Deploy update webhook job
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/jobs.yaml

    - name: Create Controller role
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/ingress-service-account.yaml

    - name: Create ConfigMap
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/configmap.yaml

    - name: Create Ingress Controller Service
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/services.yaml

    - name: Create Ingress Controller Deployment
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./ingress-setup/deployment.yaml

    # Create web application
    - name: Create web-server namespace
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ deployment_name }}"

    - name: Create app secret
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/app.secret.yaml

    - name: Create mysql secret
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/mysql.secret.yaml

    - name: Create mysql configmap
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/mysql.configmap.yaml

    - name: Create mysql configmap-1
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/mysql.configmap-1.yaml

    - name: Create mysql pvc
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/mysql.pvc.yaml

    - name: Create web-server deployment
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/app.deployment.yaml

    - name: Create web-server ingress
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/app.ingress.yaml

    - name: Create mysql deployment
      k8s:
        api_key: "{{ aws_token }}"
        context: arn:aws:eks:ap-southeast-1:195996744877:cluster/EKS-production
        src: ./web-config/mysql.deployment.yaml
